# Generated by Django 3.2.18 on 2023-06-25 05:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OrganizationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('phone', models.CharField(default='not showed', max_length=202)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(choices=[('tashkent', 'Toshkent shahri'), ('tashkentv', 'Toshkent viloyati'), ('andijan', 'Andijon viloyati'), ('bukhara', 'Buxoro viloyati'), ('fergana', 'Ferg`ona viloyati'), ('jizzakh', 'Jizzax viloyati'), ('qashkadarya', 'Qashqadaryo viloyati'), ('navoiy', 'Navoiy viloyati'), ('namangan', 'Namangan viloyati'), ('samarqant', 'Samarqand viloyati'), ('sirdaryo', 'Sirdaryo viloyati'), ('surxondaryo', 'Surxondaryo viloyati'), ('xorazm', 'Xorazm viloyati'), ('qoraqalpoq', 'Qoraqalpog`iston')], max_length=20, null=True)),
                ('district', models.CharField(choices=[('Chilonzor', 'Chilonzor'), ('Mirobod', 'Mirobod'), ('Mirzo Ulug`bek', 'Mirzo Ulug`bek'), ('Olmazor', 'Olmazor'), ('Sergeli', 'Sergeli'), ('Shayxontohur', 'Shayxontohur'), ('Uchtepa', 'Uchtepa'), ('Yakkasaroy', 'Yakkasaroy'), ('Yangihayot', 'Yangihayot'), ('Yashnobod', 'Yashnobod'), ('Yunusobod', 'Yunusobod'), ('Bekobod', 'Bekobod'), ('Boʻka', 'Boʻka'), ('Boʻstonliq', 'Boʻstonliq'), ('Zangiota', 'Zangiota'), ('Oqqoʻrgʻon', 'Oqqoʻrgʻon'), ('Ohangaron', 'Ohangaron'), ('Parkent', 'Parkent'), ('Piskent', 'Piskent'), ('Chinoz', 'Chinoz'), ('Yuqori Chirchiq', 'Yuqori Chirchiq'), ('Yangiyoʻl', 'Yangiyoʻl'), ('Oʻrta Chirchiq', 'Oʻrta Chirchiq'), ('Qibray', 'Qibray'), ('Quyi Chirchiq', 'Quyi Chirchiq'), ('Andijan', 'Andijan'), ('Asaka', 'Asaka'), ('Bo`z', 'Bo`z'), ('Buloqboshi', 'Buloqboshi'), ('Izboskan', 'Izboskan'), ('Jalalkuduk', 'Jalalkuduk'), ('Marhamat', 'Marhamat'), ('Oltinkan', 'Oltinkan'), ('Paxtaobod', 'Paxtaobod'), ('Qorasuv', 'Qorasuv'), ('Shahrixon', 'Shahrixon'), ('Ulug`nor', 'Ulug`nor'), ('Xonobod', 'Xonobod'), ('Alat', 'Alat'), ('Bukhara', 'Bukhara'), ('G`ijduvon', 'G`ijduvon'), ('Jondor', 'Jondor'), ('Karakul', 'Karakul'), ('Kogon', 'Kogon'), ('Olot', 'Olot'), ('Peshku', 'Peshku'), ('Romitan', 'Romitan'), ('Shofirkon', 'Shofirkon'), ('Vabkent', 'Vabkent'), ('Bag`dod ', 'Bag`dod '), ('Beshariq ', 'Beshariq '), ('Buvayda ', 'Buvayda '), ('Dang`ara ', 'Dang`ara '), ('Farg`ona ', 'Farg`ona '), ('Furqat ', 'Furqat '), ('Qo`qon ', 'Qo`qon '), ('Qo`rg`ontepa ', 'Qo`rg`ontepa '), ('Quva ', 'Quva '), ('Rishton ', 'Rishton '), ('So`x ', 'So`x '), ('Toshloq ', 'Toshloq '), ('Uchqo`rg`on', 'Uchqo`rg`on'), ('Yozyovon', 'Yozyovon'), ('Arnasoy', 'Arnasoy'), ('Baxmal', 'Baxmal'), ('Chiroqchi', 'Chiroqchi'), ('Dustlik', 'Dustlik'), ('Forish', 'Forish'), ('G`allaorol', 'G`allaorol'), ('Jizzax', 'Jizzax'), ('Mirzacho`l', 'Mirzacho`l'), ('Pakhtakor', 'Pakhtakor'), ('Yangiabad', 'Yangiabad'), ('Zarbdor', 'Zarbdor'), ('Zafarobod ', 'Zafarobod '), ('Chirakchi', 'Chirakchi'), ('Dehkanabad', 'Dehkanabad'), ('G‘uzor', 'G‘uzor'), ('Kasbi', 'Kasbi'), ('Kitob', 'Kitob'), ('Mirishkor', 'Mirishkor'), ('Muborak', 'Muborak'), ('Nishon', 'Nishon'), ('Qamashi', 'Qamashi'), ('Qarshi', 'Qarshi'), ('Shakhrisabz', 'Shakhrisabz'), ('Shahrisabz', 'Shahrisabz'), ('Shirin', 'Shirin'), ('Yakkabog‘', 'Yakkabog‘'), ("Yakkabog'", "Yakkabog'"), ('Chortoq', 'Chortoq'), ('Chust', 'Chust'), ('Dexqonobod', 'Dexqonobod'), ('Kosonsoy', 'Kosonsoy'), ('Mingbuloq', 'Mingbuloq'), ('Namangan', 'Namangan'), ('Norin', 'Norin'), ('Pop', 'Pop'), ('To`raqo`rg`on', 'To`raqo`rg`on'), ('Uychi', 'Uychi'), ('Uygen', 'Uygen'), ('Yangiobod', 'Yangiobod'), ('Kiziltepa', 'Kiziltepa'), ('Konimex', 'Konimex'), ('Navoiy', 'Navoiy'), ('Nurota', 'Nurota'), ('Tomdi', 'Tomdi'), ('Uchkuduk', 'Uchkuduk'), ('Xatirchi', 'Xatirchi'), ('Zarafshon', 'Zarafshon'), ('Navbahor', 'Navbahor'), ('Bulungur', 'Bulungur'), ('Ishtikhon', 'Ishtikhon'), ('Jambay', 'Jambay'), ('Katta-Kurgan', 'Katta-Kurgan'), ('Narpay', 'Narpay'), ('Nurobod', 'Nurobod'), ('Oqdaryo', 'Oqdaryo'), ('Pakhtachi', 'Pakhtachi'), ('Pastdarg‘om', 'Pastdarg‘om'), ('Payariq', 'Payariq'), ('Samarqand', 'Samarqand'), ('Toyloq', 'Toyloq'), ('Urgut', 'Urgut'), ('Yangiyer', 'Yangiyer'), ('Yoson', 'Yoson'), ('Yoshlar', 'Yoshlar'), ('Angor', 'Angor'), ('Boysun', 'Boysun'), ('Denov', 'Denov'), ('Jarqo‘rg‘on', 'Jarqo‘rg‘on'), ('Qiziriq', 'Qiziriq'), ('Muzrabot', 'Muzrabot'), ('Oltinsoy', 'Oltinsoy'), ('Qumqo‘rg‘on', 'Qumqo‘rg‘on'), ('Sariosiyo', 'Sariosiyo'), ('Sherobod', 'Sherobod'), ('Sho‘rchi', 'Sho‘rchi'), ('Termiz', 'Termiz'), ('Uzun', 'Uzun'), ('Qiziltepa', 'Qiziltepa'), ('Boyovut', 'Boyovut'), ('Gulistan', 'Gulistan'), ('Mirzachul', 'Mirzachul'), ('Ohangaron', 'Ohangaron'), ('Saykhunobod', 'Saykhunobod'), ('Sardoba', 'Sardoba'), ('Sharof Rashidov', 'Sharof Rashidov'), ('Yangi', 'Yangi'), ('Yaypan', 'Yaypan'), ('Bog‘ot', 'Bog‘ot'), ('Gurlan', 'Gurlan'), ('Khiva', 'Khiva'), ('O‘zun', 'O‘zun'), ('Qo‘shko‘pir', 'Qo‘shko‘pir'), ('Shavat', 'Shavat'), ('Urganch', 'Urganch'), ('Xonqa', 'Xonqa'), ('Yangiariq', 'Yangiariq'), ('Yangibozor', 'Yangibozor'), ('Yangiyer', 'Yangiyer'), ('Beruniy', 'Beruniy'), ('Chimboy', 'Chimboy'), ("Ellikqal'a", "Ellikqal'a"), ('Kegeyli', 'Kegeyli'), ('Mo‘ynoq', 'Mo‘ynoq'), ('Nukus', 'Nukus'), ('Qanliko‘l', 'Qanliko‘l'), ('Qo‘ng‘irot', 'Qo‘ng‘irot'), ('Qorao‘zak', 'Qorao‘zak'), ('Shumanay', 'Shumanay'), ('Taxiatosh', 'Taxiatosh'), ('To‘rtko‘l', 'To‘rtko‘l'), ('Xojeli', 'Xojeli')], max_length=20, null=True)),
                ('category', models.IntegerField(choices=[(0, 'university'), (1, 'school'), (2, 'organization'), (3, 'office'), (4, 'business center'), (5, 'bank'), (6, 'zoo'), (7, 'garden'), (8, 'residence'), (9, 'forest')])),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='organ_icons')),
                ('tree_count', models.IntegerField(default=0)),
                ('land_area', models.CharField(default='not showed', max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='ResponsiblePersonModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=60, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='person_icons')),
                ('position', models.CharField(max_length=100, null=True)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='OrganizationPerson', to='app.organizationmodel')),
            ],
        ),
        migrations.CreateModel(
            name='TreeInfoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Ninabargli Archa', max_length=50, null=True)),
                ('type', models.IntegerField(choices=[(0, 'archa'), (1, 'manzarali'), (2, 'mevali')], default=0, null=True)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('tall', models.CharField(default='3-4', max_length=20, null=True)),
                ('status', models.IntegerField(choices=[(0, 'alo'), (1, 'yaxshi'), (2, 'qoniqarli'), (3, 'o`rtacha'), (4, 'qoniqarsiz'), (5, 'yomon'), (6, 'achinarli')], default=1, null=True)),
                ('irrigation', models.IntegerField(choices=[(0, 'alo'), (1, 'yaxshi'), (2, 'qoniqarli'), (3, 'o`rtacha'), (4, 'qoniqarsiz'), (5, 'yomon'), (6, 'achinarli')], default=1, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='OrganizationTree', to='app.organizationmodel')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ResponsibleTree', to='app.responsiblepersonmodel')),
            ],
        ),
    ]
